/** * @module analytics-proxy **/var    BASE_PATH,    ANALYTICS_ID_REGEX,	pixel,	badge,	pageTemplate       = loadText(BASE_PATH + 'ga-beacon/page.html');BASE_PATH          = File(module.id).parent.path,ANALYTICS_ID_REGEX = /^\/((\bUA-\d{4,10}-\d{1,4})|(\d*-\bMRT-\d*))/;pixel              = loadImage(BASE_PATH + 'static/pixel.gif'),badge              = loadImage(BASE_PATH + 'static/badge.gif'),pageTemplate       = loadText(BASE_PATH + 'ga-beacon/page.html');exports.start = function init() {	addHttpRequestHandler(ANALYTICS_ID_REGEX, 'analytics-proxy', 'imageRequestHandler');};analyticsTools = [];// currently hardcoded load of Google AnalyticsanalyticsTools.push(require('./plugins/google-analytics'));function generateCookie(name, value, path) {    var        cookie;        cookie = name + '=' + value;    if (path) {        cookie += ';path=' + path;    }        return cookie;}function getCookieValue(cookies, name) {    var        value;    cookies = cookies.split('\n');    cookies.some(function parseCookies(current) {        current = current.split('=');        if (current[0] !== name) {            return false;        }        value = current[1].split(';')[0];        return true;    });        return value;}exports.imageRequestHandler = function imageRequestHandler(request, response) {    var        accountID,        cookies,        cid,        referer,        userAgent,        language;	accountID = request.urlPath.split('/').slice(0, 2);	// /account -> account template	/*	if (params.length === 1) {		response.contentType = 'text/html';		templateParams = {			Account: params[0]		};        html = Mustache.render(pageTemplate, templateParams);		if (!html) {		    response.status = 500;		    return [		        "could not show account page",		        "Cannot execute template: page.html"		    ].join('\n<br>');		}				return html;	}	*/    referer = request.headers["Referer"];    userAgent = request.headers["User-Agent"];    // not perfect but usually enough (should check best quality)    language = request.headers["Accept-Language:"].split(',')[0];	// /account/page -> GIF + log pageview to GA collector	cookies = request.headers.Cookie;    cid = getCookieValue(cookies, 'cid');	if (!cookies) {	    cid = generateUUID();		console.log("Generated new client UUID: %v", cid);		cookies = generateCookie("cid", cid, "/" + params[0]);		response.headers['Set-Cookie'] = cookies;	}    analyticsTools.some(function sendHit(tool) {        var            error;        if (!accountID.test(tool.REGEX)) {            return false;        }        error = tool.sendHit(accountID, cid, referer, request.headers["User-Agent"], language);        if (error) {            console.error(error.message);        }        return true;    });	response.headers["Content-Type"] = "image/gif";	response.headers["Cache-Control"] = "no-cache";	// Write out GIF pixel or badge, based on presence of "pixel" param.	if (request.urlQuery === 'pixel') {		return pixel;	}		return badge;}